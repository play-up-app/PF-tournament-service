name: 🚀 Tournament Service - Intégration Continue

on:
  push:
    branches: [main, develop]
    paths: ['services/tournament-service/**']
  pull_request:
    branches: [main]
    paths: ['services/tournament-service/**']

defaults:
  run:
    working-directory: services/tournament-service

jobs:
  # 🧪 Tests et Qualité
  test:
    name: 🧪 Tests & Qualité
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: services/tournament-service/package-lock.json
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔍 Generate Prisma Client
        run: npx prisma generate
        
      - name: 🧪 Run tests
        run: npm test
        
      - name: 📊 Run tests with coverage
        run: npm run test:coverage
        
      - name: 📈 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: services/tournament-service/coverage/lcov.info
          flags: tournament-service

  # 🚀 Release (seulement sur main)
  release:
    name: 🚀 Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: services/tournament-service/package-lock.json
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🚀 Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # PUSH DOCKER TO GHCR  
  docker-push:
    name: Push Docker Image to GHCR
    runs-on: ubuntu-latest
    needs: release
    if: github.ref == 'refs/heads/main'

    steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Get version from tag
          id : get-version
          run: |
            VERSION=$(git describe --tags --abbrev=0)
            VERSION_CLEANED=${VERSION#tournament-service-v}
            echo "VERSION_TAG=${VERSION_CLEANED}" >> $GITHUB_ENV

        - name: Login to GHCR
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Build and push Docker image
          uses: docker/build-push-action@v5
          with:
            context: services/tournament-service
            push: true
            tags: |
                ghcr.io/play-up-app/tournament-service:latest
                ghcr.io/play-up-app/tournament-service:${{ env.VERSION_TAG }}